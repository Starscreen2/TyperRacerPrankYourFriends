if (typeof jQuery === 'undefined') {
    var jq = document.createElement('script');
    jq.src = "//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js";
    document.getElementsByTagName('head')[0].appendChild(jq);

    // Wait for jQuery to load
    jq.onload = function() {
        executeScript();
    };
} else {
    executeScript();
}

function executeScript() {
    jQuery.noConflict();
    (function($) {
        var inputText;
        var i = 0;

        function getRandomInterval() {
            var minInterval = 121; // CUSTOMIZE: Adjusted for fastest typing speed (99 WPM)
            var maxInterval = 172; // CUSTOMIZE: Adjusted for slowest typing speed (70 WPM)

            // Slightly longer pause for spaces and punctuation
            if (inputText[i] === ' ' || [',', '.', ';', ':', '!', '?'].includes(inputText[i])) {
                maxInterval += 10; // CUSTOMIZE: Adjust the additional delay for spaces and punctuation
                minInterval += 5;  // CUSTOMIZE: Adjust the additional delay for spaces and punctuation
            }

            return Math.random() * (maxInterval - minInterval) + minInterval;
        }

        async function makeMistakeAndCorrect() {
            var mistakeLength = Math.floor(Math.random() * 4) + 1; // CUSTOMIZE: Maximum number of incorrect characters typed
            var wrongChars = "";

            for (var j = 0; j < mistakeLength; j++) {
                var wrongChar;
                do {
                    wrongChar = String.fromCharCode(Math.floor(Math.random() * 26) + 97);
                } while (wrongChar === inputText[i]);
                wrongChars += wrongChar;
            }

            $('.txtInput').val($('.txtInput').val() + wrongChars);

            await new Promise(resolve => setTimeout(resolve, Math.random() * (750 - 400) + 400)); // CUSTOMIZE: Delay for fixing the error for high WPM typist

            var currentVal = $('.txtInput').val();
            $('.txtInput').val(currentVal.slice(0, -mistakeLength));

            await new Promise(resolve => setTimeout(resolve, 10));

            typeCorrectCharacter();
        }

        function typeCorrectCharacter() {
            $('.txtInput').val($('.txtInput').val() + inputText[i]);
            i++;
            if (i < inputText.length) {
                autoType();
            }
        }

        async function autoType() {
            await new Promise(resolve => setTimeout(resolve, getRandomInterval()));

            if (i >= inputText.length) {
                return;
            }

            // Adjust mistake probability
            var effectiveMistakeProbability = 1 / 150; // CUSTOMIZE: Chance of typing a character incorrectly for high WPM typist
            if (['th', 'st', 'nd', 'rd'].some(suffix => inputText.slice(i - 2, i) === suffix)) {
                effectiveMistakeProbability *= 1.2; // CUSTOMIZE: Increase mistake probability for tricky sequences
            }
            
            if (Math.random() < effectiveMistakeProbability) {
                await makeMistakeAndCorrect();
            } else {
                typeCorrectCharacter();
            }
        }

        $('body').on('keydown', '.txtInput', function(e) {
            if ((e.which || e.keyCode) == 32) {
                e.preventDefault();
                if (i === 0) {
                    inputText = $('.inputPanel tr:first').text();
                    autoType();
                }
            }
        });
    })(jQuery);
}
